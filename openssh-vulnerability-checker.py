import paramiko
import re

def check_ssh_vulnerability(host, port=22):
    try:
        # Create a Transport object
        transport = paramiko.Transport((host, port))
        # Start the connection to retrieve the banner
        transport.connect()
        banner = transport.remote_version
        transport.close()

        print(f"SSH Banner: {banner}")

        # Extract version number from the banner using regex
        version_match = re.search(r"OpenSSH_(\d+\.\d+[p\d+]*)", banner)
        if not version_match:
            print("OpenSSH version not found in the banner.")
            return

        version = version_match.group(1)
        print(f"OpenSSH Version: {version}")

        # Check if the version is below 9.3p2
        is_vulnerable = compare_versions(version, "9.3p2")
        if is_vulnerable:
            print("The server is vulnerable. Please update OpenSSH.")
        else:
            print("The server is not vulnerable.")

    except Exception as e:
        print(f"Failed to connect to {host}:{port} - {e}")

def compare_versions(version, secure_version):
    # Split versions into parts
    version_parts = re.split(r'[\.\-p]', version)
    secure_version_parts = re.split(r'[\.\-p]', secure_version)

    # Compare each part
    for vp, svp in zip(version_parts, secure_version_parts):
        if vp.isdigit() and svp.isdigit():
            if int(vp) < int(svp):
                return True
            elif int(vp) > int(svp):
                return False

    # If all compared parts are equal, compare lengths
    if len(version_parts) < len(secure_version_parts):
        return True

    return False

if __name__ == "__main__":
    host = input("Enter the SSH server address: ")
    port = int(input("Enter the SSH server port (default 22): ") or 22)
    check_ssh_vulnerability(host, port)

